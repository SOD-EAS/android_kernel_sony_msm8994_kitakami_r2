### GCC 4.9.x
### I'm using UBERTC https://bitbucket.org/UBERTC/aarch64-linux-android-4.9-kernel

export USE_CCACHE=1

export CACHE_DIR=~/.ccache

export ARCH=arm64
export PATH=~/android/z5_build-environment/mdalexca-aarch64-linux-android-4.9-kernel-linaro-09c6758022e7/bin/:$PATH
export CROSS_COMPILE=aarch64-linux-android-

export KBUILD_DIFFCONFIG=sumire_diffconfig
make msm8994-perf_defconfig
###make oldconfig
make -j8

echo "checking for compiled kernel..."
if [ -f arch/arm64/boot/Image.gz-dtb ]
then

#echo "generating device tree..."
#make dtbs
#../final_files/dtbToolCM --force-v2 -o ../final_files/dt.img -s 2048 -p ./scripts/dtc/ ./arch/arm/boot/dts/

### copy zImage
#cp arch/arm64/boot/Image ../final_files/. 

	echo "okay"

	### E6653
	../final_files/mkbootimg_MM --cmdline "androidboot.hardware=qcom user_debug=31 msm_rtb.filter=0x3F ehci-hcd.park=3 lpm_levels.sleep_disabled=1 boot_cpus=0-3 dwc3_msm.prop_chg_detect=Y coherent_pool=2M dwc3_msm.hvdcp_max_current=1500 androidboot.selinux=permissive enforcing=0" --base 0x00000000 --kernel arch/arm64/boot/Image.gz-dtb --ramdisk ../final_files/ramdiskE6653_sum_MM_mod_5.11.cpio.gz --ramdisk_offset 0x02000000 --pagesize 4096 -o ../final_files/boot_E6653.img --tags_offset 0x01E00000
	### Enforcing build
	#../final_files/mkbootimg_MM --cmdline "androidboot.hardware=qcom user_debug=31 msm_rtb.filter=0x237 ehci-hcd.park=3 lpm_levels.sleep_disabled=1 boot_cpus=0-3 dwc3_msm.prop_chg_detect=Y coherent_pool=2M dwc3_msm.hvdcp_max_current=1500 androidboot.selinux=enforcing enforcing=1" --base 0x00000000 --kernel arch/arm64/boot/Image.gz-dtb --ramdisk ../final_files/ramdiskE6653_sum_MM_mod_5.11.cpio.gz --ramdisk_offset 0x02000000 --pagesize 4096 -o ../final_files/boot_E6653_E.img --tags_offset 0x01E00000

	### Version number
	echo -n "Enter version number: "
	read version

	echo "Packaging 'Permissive' kernel"
	echo " "

	if [ -e ../final_files/boot_E6653.img ]
	then

		### Zip boot.img
		cd ../final_files/
		mv boot_E6653.img boot.img
		zip -r Z5_SK_Perm_v.zip boot.img META-INF/
		rm -f boot.img

		echo " "
		echo "Copying to z5-kernelbuild"
		echo " "

		cp ~/android/final_files/Z5_SK_Perm_v.zip ~/android/z5-kernelbuild/Z5_SK_Perm_v$version.zip

		echo "Packaging 'Enforcing' kernel"
		echo " "
	
	fi


	if [ -e ~/android/z5-kernels/fs/ecryptfs/ecryptfs.ko ]
	then

		echo " "
		echo "Copying over ecryptfs kernel module"
		echo " "

#		cp ~/android/z5-kernels/fs/ecryptfs/ecryptfs.ko ~/android/z5-kernelbuild/modules4sumire/ecryptfs.ko_Z5_SK_v$version
		zip ~/android/z5-kernelbuild/modules4sumire/ecryptfs.ko_Z5_SK_v$version.zip ~/android/z5-kernels/fs/ecryptfs/ecryptfs.ko

		echo " "
		echo "done"

	fi

#if [ -e ../final_files/boot_E6653_E.img ]
#then
#
	### Zip boot.img
	#cd ../final_files/
	#mv boot_E6653_E.img boot.img
	#zip -r Z5_SK_Enf_v.zip boot.img META-INF/
	#rm -f boot.img
	#
	#echo " "
	#echo "Copying to z5-kernelbuild"
	#echo " "
	#
	#cp ~/android/final_files/Z5_SK_Enf_v.zip ~/android/z5-kernelbuild/Z5_SK_Enf_v$version.zip
	#
	#fi

fi
